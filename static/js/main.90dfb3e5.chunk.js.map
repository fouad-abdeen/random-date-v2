{"version":3,"sources":["useFetch.tsx","Message.tsx","App.tsx","index.tsx"],"names":["useFetch","url","ref","initialValue","React","useState","data","setData","error","setError","loading","setLoading","useEffect","current","a","fetch","res","json","fetchData","Message","props","Card","Header","Accordion","Toggle","as","Button","variant","eventKey","id","name","icon","faCaretDown","Collapse","Body","message","MyVerticallyCenteredModal","Modal","size","aria-labelledby","centered","className","faBirthdayCake","App","specialDate","dateIsChosen","setDateAsChosen","dateIsSetUp","setUpDate","day","setDay","month","setMonth","year","setYear","counterDuration","modalShow","setModalShow","messages","setMessages","isComponentMounted","useRef","json_response","json_data","htmlFor","type","onChange","moment","format","setTimeout","value","formatValue","duration","show","onHide","faAngleDoubleDown","map","Math","random","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.90dfb3e5.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst useFetch = (url, ref, initialValue) => {\r\n  const [data, setData] = React.useState(initialValue);\r\n  const [error, setError] = React.useState(null);\r\n  const [loading, setLoading] = React.useState(true);\r\n\r\n  React.useEffect(() => {\r\n    if (ref.current) {\r\n      const fetchData = async () => {\r\n        try {\r\n          const res = await fetch(url);\r\n          const json = await res.json();\r\n          setData(json);\r\n        } catch (error) {\r\n          setError(error);\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      };\r\n      fetchData();\r\n    }\r\n    return () => {\r\n      ref.current = false;\r\n    };\r\n  }, [url, ref]);\r\n\r\n  return { data, error, loading };\r\n};\r\n\r\nexport default useFetch;\r\n","import { I_Message } from \"./interfaces\";\r\nimport { Accordion, Button, Card } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCaretDown } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction Message(props: { data: I_Message }) {\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Header>\r\n          <Accordion.Toggle as={Button} variant=\"link\" eventKey={props.data.id}>\r\n            <h4>{props.data.name}</h4>\r\n            <FontAwesomeIcon icon={faCaretDown}></FontAwesomeIcon>\r\n          </Accordion.Toggle>\r\n        </Card.Header>\r\n        <Accordion.Collapse eventKey={props.data.id}>\r\n          <Card.Body>\r\n            <h5>{props.data.message}</h5>\r\n          </Card.Body>\r\n        </Accordion.Collapse>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Message;\r\n","import React, { useRef, useState } from \"react\";\nimport \"./App.css\";\nimport * as json_data from \"./link.json\";\nimport useFetch from \"./useFetch\";\nimport Message from \"./Message\";\nimport { I_Modal } from \"./interfaces\";\nimport moment from \"moment\";\nimport AnimatedNumber from \"animated-number-react\";\nimport { Accordion, Button, Card, Modal } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faAngleDoubleDown,\n  faBirthdayCake,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nfunction MyVerticallyCenteredModal(props: I_Modal) {\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Body>\n        <h2 className=\"theme title\">\n          Happy Birthday Shadi! <FontAwesomeIcon icon={faBirthdayCake} />\n        </h2>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nfunction App() {\n  const specialDate = \"1972-04-21\";\n  const [dateIsChosen, setDateAsChosen] = useState(false);\n  const [dateIsSetUp, setUpDate] = useState(false);\n  const [day, setDay] = useState(\"00\");\n  const [month, setMonth] = useState(\"00\");\n  const [year, setYear] = useState(\"0000\");\n  const [counterDuration] = useState(5000);\n  const [modalShow, setModalShow] = useState(false);\n  const [messages, setMessages] = useState([]);\n\n  const isComponentMounted = useRef(true);\n  const json_response = useFetch(json_data.link, isComponentMounted, []);\n\n  const handleInputDate = () => {\n    setDateAsChosen(true);\n    setDay(moment(specialDate).format(\"DD\"));\n    setMonth(moment(specialDate).format(\"MM\"));\n    setYear(moment(specialDate).format(\"YYYY\"));\n\n    setTimeout(() => {\n      setMessages(json_response.data);\n    }, 6000);\n\n    setTimeout(() => {\n      setUpDate(true);\n      setModalShow(true);\n    }, 7000);\n  };\n\n  const formatDayValue = (value: string) => {\n    if (dateIsChosen) {\n      return value;\n    } else {\n      return `0${value}`;\n    }\n  };\n\n  const formatMonthValue = (value: string) => `0${value}`;\n\n  const formatYearValue = (value: string) => {\n    if (dateIsChosen) {\n      return value;\n    } else {\n      return `000${value}`;\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"date-picker mt-5 mb-5\">\n        <label htmlFor=\"date\" className=\"mb-2\">\n          <h4>Choose a Random Date</h4>\n        </label>\n        <input\n          type=\"date\"\n          name=\"date\"\n          className=\"btn-light  form-control\"\n          onChange={handleInputDate}\n        />\n      </div>\n\n      <br />\n\n      <h1 className=\"date mt-5 mb-5\">\n        <AnimatedNumber\n          value={day}\n          formatValue={formatDayValue}\n          duration={counterDuration}\n        />\n        <AnimatedNumber\n          value={month}\n          formatValue={formatMonthValue}\n          duration={counterDuration}\n        />\n        <AnimatedNumber\n          value={year}\n          formatValue={formatYearValue}\n          duration={counterDuration}\n        />\n      </h1>\n\n      <MyVerticallyCenteredModal\n        className=\"mb-5\"\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n      />\n\n      {dateIsSetUp && !modalShow ? (\n        <div className=\"mt-5 theme\">\n          <Accordion>\n            <Card>\n              <Card.Header>\n                <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n                  <h4> You have some messages from your beloved people</h4>\n                  <br />\n                  <FontAwesomeIcon icon={faAngleDoubleDown}></FontAwesomeIcon>\n                </Accordion.Toggle>\n              </Card.Header>\n              <Accordion.Collapse eventKey=\"0\">\n                <Card.Body>\n                  <Accordion>\n                    {messages.map((message) => (\n                      <Message data={message} key={Math.random()} />\n                    ))}\n                  </Accordion>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n          </Accordion>\n        </div>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}